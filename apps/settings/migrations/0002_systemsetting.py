# Generated by Django 5.2.1 on 2025-06-27 09:28

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('settings', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whatsapp_api_vendor', models.CharField(choices=[('MaytAPI', 'MaytAPI'), ('GreenAPI', 'GreenAPI'), ('IRocketQAPI', 'IRocketQAPI'), ('SmartPingAPI', 'SmartPingAPI'), ('MidapWhatsappUnofficialAPI', 'MidapWhatsappUnofficialAPI'), ('KarvatechAPI', 'KarvatechAPI')], default='MaytAPI', max_length=50)),
                ('whatsapp_api_key', models.CharField(blank=True, help_text='Your MaytAPI (or other) API key', max_length=200)),
                ('whatsapp_api_sender_id', models.CharField(blank=True, help_text='The sender ID you registered', max_length=100)),
                ('whatsapp_api_webhook_url', models.URLField(blank=True, help_text='Webhook URL (read-only)')),
                ('authorized_phones', models.TextField(blank=True, help_text='Comma-separated WhatsApp numbers (no spaces) allowed to send')),
                ('authorized_emails', models.TextField(blank=True, help_text='Comma-separated emails allowed to send')),
                ('send_daily_doer', models.BooleanField(default=False, verbose_name='Doer')),
                ('send_daily_admin', models.BooleanField(default=False, verbose_name='Admin')),
                ('send_weekly_doer', models.BooleanField(default=False, verbose_name='Doer')),
                ('send_weekly_admin', models.BooleanField(default=False, verbose_name='Admin')),
                ('send_monthly_doer', models.BooleanField(default=False, verbose_name='Doer')),
                ('send_monthly_admin', models.BooleanField(default=False, verbose_name='Admin')),
                ('notify_wapp_pending_checklist', models.BooleanField(default=True, verbose_name='WhatsApp Pending Checklist')),
                ('notify_wapp_pending_delegation', models.BooleanField(default=True, verbose_name='WhatsApp Pending Delegation')),
                ('notify_email_pending_checklist', models.BooleanField(default=False, verbose_name='Email Pending Checklist')),
                ('notify_email_pending_delegation', models.BooleanField(default=False, verbose_name='Email Pending Delegation')),
                ('notify_wapp_checklist', models.BooleanField(default=True, verbose_name='WhatsApp on Checklist create')),
                ('notify_wapp_fms', models.BooleanField(default=True, verbose_name='WhatsApp on FMS create')),
                ('notify_email_checklist', models.BooleanField(default=True, verbose_name='Email on Checklist create')),
                ('notify_email_delegation', models.BooleanField(default=True, verbose_name='Email on Delegation create')),
                ('notify_email_helpticket', models.BooleanField(default=True, verbose_name='Email on Help Ticket create')),
                ('notify_email_helpticket_reminder', models.BooleanField(default=True, verbose_name='Email on Help Ticket reminder')),
                ('all_doer_report_generate', models.BooleanField(default=True, verbose_name='Generate All-Doer EM Report')),
                ('mis_performance_mode', models.CharField(choices=[('Weightage', 'Weightage')], default='Weightage', max_length=20)),
                ('checklist_weightage', models.PositiveSmallIntegerField(default=60)),
                ('delegation_weightage', models.PositiveSmallIntegerField(default=20)),
                ('fms_weightage', models.PositiveSmallIntegerField(default=20)),
                ('weight_low', models.PositiveSmallIntegerField(default=1)),
                ('weight_medium', models.PositiveSmallIntegerField(default=1)),
                ('weight_high', models.PositiveSmallIntegerField(default=1)),
                ('smtp_from_name', models.CharField(blank=True, max_length=100)),
                ('smtp_username', models.CharField(blank=True, max_length=200)),
                ('smtp_password', models.CharField(blank=True, max_length=200)),
                ('high_stock_notification_freq', models.PositiveIntegerField(default=0, verbose_name='High Stock Notify (days)')),
                ('low_stock_notification_freq', models.PositiveIntegerField(default=0, verbose_name='Low Stock Notify (days)')),
                ('stockout_notification_freq', models.PositiveIntegerField(default=0, verbose_name='Stock-Out Notify (days)')),
                ('max_fast_flowing_product', models.PositiveIntegerField(default=10)),
                ('max_slow_flowing_product', models.PositiveIntegerField(default=10)),
                ('marketing_mode', models.CharField(choices=[('sequence', 'In Sequence'), ('parallel', 'In Parallel')], default='sequence', max_length=20)),
                ('marketing_freeze_min', models.PositiveIntegerField(default=60, verbose_name='Freeze From (min)')),
                ('marketing_freeze_max', models.PositiveIntegerField(default=60, verbose_name='Freeze To (min)')),
                ('marketing_after_sending', models.PositiveIntegerField(default=500, verbose_name='Minutes After Sending')),
                ('marketing_sleep_min', models.PositiveIntegerField(default=1, verbose_name='Sleep Time Min')),
                ('marketing_sleep_max', models.PositiveIntegerField(default=5, verbose_name='Sleep Time Max')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
            ],
            options={
                'verbose_name': 'System Setting',
            },
        ),
    ]
